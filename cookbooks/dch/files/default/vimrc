"==== Setup Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()
Plugin 'gmarik/vundle'

"---------- Vundle Configs ------------------------------------------------------------
filetype off                " required!
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins

hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white

"---------- Base Configs ------------------------------------------------------------

syntax on
set nocompatible          " no need to be compatible with old vim
set shiftwidth=2          " Set the default shift width for indents
set hlsearch              " highlight search
set ignorecase            " Do case in sensitive matching with
set smartcase             " be sensitive when there's a capital letter
set incsearch
set showmatch             " Show matching brackets.
set cursorline
set vb                                        " Enable visual bell disable any beeps or flashes on error
set laststatus=2          " Always show status line.
set clipboard+=unnamed    " Yanks go on clipboard instead.

"set ruler                 " Show ruler
"set bs=2
"set list
"set autowrite             " Writes on make/shell commands
"set autoread
"set timeoutlen=250        " Time to wait after ESC (default causes an annoying delay)
"set number                " Show line numbers
"set directory=/tmp//      " prepend(^=) $HOME/.tmp/ to default path; use full path as backup filename(//)
"set hidden                " The current buffer can be put to the background without writing to disk

set nowritebackup
set nobackup
set fo-=t                                        " Do no auto-wrap text using textwidth (does not apply to comments)
set wrap
set textwidth=0                  " Don't wrap lines by default
set backspace=indent,eol,start " more powerful backspacing
"set smartindent
set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
set tabstop=4                                " Set the default tabstop
set softtabstop=4
set expandtab             " Make tabs into spaces (set by tabstop)

set matchtime=5                            " Bracket blinking.
set novisualbell                        " No blinking
set noerrorbells                        " No noise.
"set showcmd                                " Display an incomplete command in the lower right corner of the Vim window
set equalalways
set splitbelow
set splitright

"---------- Color and Visual ------------------------------------------------------------

set statusline=%F%m%r%h%w\ %{fugitive#statusline()}\ [%l,%c]\ [%L,%p%%]        " put useful info in status bar
set background=dark                    "set background and color scheme
colorscheme desert                    "iTerm color scheme

highlight clear SignColumn
highlight VertSplit    ctermbg=236
highlight ColorColumn  ctermbg=237
highlight LineNr       ctermbg=236 ctermfg=240
highlight CursorLineNr ctermbg=236 ctermfg=240
highlight CursorLine   ctermbg=236
highlight StatusLineNC ctermbg=238 ctermfg=0
highlight StatusLine   ctermbg=240 ctermfg=12
"highlight IncSearch    ctermbg=0   ctermfg=3
"highlight Search       ctermbg=0   ctermfg=9
highlight Visual       ctermbg=3   ctermfg=0
highlight Pmenu        ctermbg=240 ctermfg=12
highlight PmenuSel     ctermbg=0   ctermfg=3
highlight SpellBad     ctermbg=0   ctermfg=1


if version >= 700
  au InsertEnter * hi StatusLine ctermfg=235 ctermbg=2
  au InsertLeave * hi StatusLine ctermbg=240 ctermfg=12
endif

"==== Highlight extra white spaces
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()



"==== Auto commands
au BufRead,BufNewFile {Gemfile,config.ru,*.thor}  set ft=ruby
au BufRead,BufNewFile {*.md,*.mkd,*.markdown}     set ft=markdown
au BufRead,BufNewFile {COMMIT_EDITMSG}            set ft=gitcommit

"==== Key mappings
" Clear last search highlighting
nnoremap <Space> :noh<cr>
let mapleader = ","         " Change leader key

"==== Navigating between windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

"==== Keep content after pasting
vnoremap <leader>p "_dP

"==== Run cucumber
"silent! map <unique> <Leader>w :!bundle exec cucumber --profile=wip<CR>

"==== Fix for rvm
set shell=/bin/sh
set pastetoggle=<F2>

"==== sudo write
"cmap w!! %!sudo tee > /dev/null %

"==== Custom functions
function! VisualSelection()
  try
    let a_save = @a
    normal! gv"ay
    return @a
  finally
    let @a = a_save
  endtry
endfunction

function! SearchProjectForSelect()
  exec ":Ack \"" . VisualSelection() . "\""
endfunction

map <leader>s :call SearchProjectForSelect()<cr>

"EOF
